The ``7-base_geometry`` module
========================

Using ``integer_validator``
------------------------

Importing function from the module:
	    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

	    >>> bg = BaseGeometry()

	    >>> bg.integer_validator("Hello", "World")
	    Traceback (most recent call last):
	    TypeError: Hello must be an integer

	    >>> bg.integer_validator("Age")
	    Traceback (most recent call last):
	    TypeError: integer_validator() takes exactly 3 arguments (2 given)

	    >>> bg.integer_validator("age", True)
	    Traceback (most recent call last):
	    TypeError: age must be an integer

	    >>> bg.integer_validator("age", {3, 4})
	    Traceback (most recent call last):
	    TypeError: age must be an integer

	    >>> bg.integer_validator("age", None)
	    Traceback (most recent call last):
	    TypeError: age must be an integer

	    >>> bg.integer_validator("Size", 1)

	    >>> bg.integer_validator(10, "Hello")
	    Traceback (most recent call last):
	    TypeError: 10 must be an integer

	    >>> bg.integer_validator("Size", -1)
	    Traceback (most recent call last):
	    ValueError: Size must be greater than 0

	    >>> bg.integer_validator("Age", 0)
	    Traceback (most recent call last):
	    ValueError: Age must be greater than 0

	    >>> bg.integer_validator("distance", 2.5)
	    Traceback (most recent call last):
	    TypeError: distance must be an integer

	    >>> bg.integer_validator()
	    Traceback (most recent call last):
	    TypeError: integer_validator() takes exactly 3 arguments (1 given)

	    >>> bg.integer_validator("Age", (1, 2, 3))
	    Traceback (most recent call last):
	    TypeError: Age must be an integer

	    >>> bg.integer_validator("Age", [6, 2, 3])
	    Traceback (most recent call last):
	    TypeError: Age must be an integer
